/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package jframe_proyectofinal;
import javax.swing.JOptionPane;
import java.util.ArrayList; 
import javax.swing.DefaultListModel;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import javax.swing.JOptionPane;

/**
 *
 * @author emili
 */
public class JFrame_proyecto extends javax.swing.JFrame {

    private ArrayList<Estudiante> listaEstudiantes = new ArrayList<>();
    
    private void actualizarJList() {
        DefaultListModel<String> modeloLista = new DefaultListModel<>();
        for (Estudiante estudiante : listaEstudiantes) {
            String datos = "Nombre: " + estudiante.getNombres() + " " + estudiante.getApellidos()
                    + " | Edad: " + estudiante.getEdad()
                    + " | Sexo: " + estudiante.getSexo()
                    + " | Usuario: " + estudiante.getNombreUsuario()
                    + " | Correo: " + estudiante.getCorreo();
            modeloLista.addElement(datos);
        }
        listEstudiantes.setModel(modeloLista);
    }
    
    private void insertarEstudiante(Estudiante estudiante) {
    // Definir la consulta SQL para insertar un estudiante
    String query = "INSERT INTO Estudiantes (nombres, apellidos, nombreUsuario, correo, contrasena, edad, sexo) VALUES (?, ?, ?, ?, ?, ?, ?)";
    
    try (Connection conn = DatabaseConnection.getConnection(); // Abrir conexión
         PreparedStatement stmt = conn.prepareStatement(query)) { // Preparar la consulta

        // Asignar valores a los parámetros de la consulta
        stmt.setString(1, estudiante.getNombres());
        stmt.setString(2, estudiante.getApellidos());
        stmt.setString(3, estudiante.getNombreUsuario());
        stmt.setString(4, estudiante.getCorreo());
        stmt.setString(5, estudiante.getContrasena());
        stmt.setInt(6, estudiante.getEdad());
        stmt.setString(7, estudiante.getSexo());

        // Ejecutar la consulta
        stmt.executeUpdate();
        JOptionPane.showMessageDialog(this, "Estudiante registrado en la base de datos correctamente.");
        
    } catch (SQLException e) {
        // Mostrar mensaje si ocurre un error
        JOptionPane.showMessageDialog(this, "Error al registrar el estudiante: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
    }
}


    public JFrame_proyecto() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        etiTitulo = new javax.swing.JLabel();
        etiImagenUTP = new javax.swing.JLabel();
        etiDatosPersonales = new javax.swing.JLabel();
        txtNombreTitulo = new javax.swing.JTextField();
        txtNombres = new javax.swing.JTextField();
        txtApellidosTitulo = new javax.swing.JTextField();
        txtApellidos = new javax.swing.JTextField();
        txtEdad = new javax.swing.JTextField();
        txtEdadTitulo = new javax.swing.JTextField();
        txtSexoTitulo = new javax.swing.JTextField();
        txtSexo = new javax.swing.JTextField();
        etiDatosDeCuenta = new javax.swing.JLabel();
        txtNombreUsuarioTitulo = new javax.swing.JTextField();
        txtNombreUsuario = new javax.swing.JTextField();
        txtCorreoTitulo = new javax.swing.JTextField();
        txtCorreo = new javax.swing.JTextField();
        txtContraseñaTitulo1 = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        etiOpcionesAdicionales = new javax.swing.JLabel();
        txtEliminarUserTitulo = new javax.swing.JTextField();
        txtEliminarUser = new javax.swing.JTextField();
        btnEliminar = new javax.swing.JButton();
        txtActualizarContraTitulo = new javax.swing.JTextField();
        txtIngreseCorreo = new javax.swing.JTextField();
        btnActualizar = new javax.swing.JButton();
        btnMostrar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        listEstudiantes = new javax.swing.JList<>();
        txtNuevaContrasena = new javax.swing.JTextField();
        txtContrasenaActual = new javax.swing.JTextField();
        txtContraseña = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(204, 204, 204));

        etiTitulo.setFont(new java.awt.Font("Yu Gothic", 1, 18)); // NOI18N
        etiTitulo.setText("Registro de Estudiante UTP-LimaNorte");
        etiTitulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        etiImagenUTP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/jframe_proyectofinal/imagenjavautp.png"))); // NOI18N

        etiDatosPersonales.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        etiDatosPersonales.setText("Datos Personales -------------------------------------------------------------------------------------");

        txtNombreTitulo.setEditable(false);
        txtNombreTitulo.setText("Nombres Completos:");

        txtNombres.setToolTipText("");
        txtNombres.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombresActionPerformed(evt);
            }
        });

        txtApellidosTitulo.setEditable(false);
        txtApellidosTitulo.setText("Apellidos Completos");

        txtApellidos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtApellidosActionPerformed(evt);
            }
        });

        txtEdad.setToolTipText("");
        txtEdad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEdadActionPerformed(evt);
            }
        });

        txtEdadTitulo.setEditable(false);
        txtEdadTitulo.setText("Edad:");

        txtSexoTitulo.setEditable(false);
        txtSexoTitulo.setText("Sexo: Masculino(M) Femenino(F)");

        txtSexo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSexoActionPerformed(evt);
            }
        });

        etiDatosDeCuenta.setFont(new java.awt.Font("Segoe UI Emoji", 0, 12)); // NOI18N
        etiDatosDeCuenta.setText("Datos De Cuenta -------------------------------------------------------------------------------------");

        txtNombreUsuarioTitulo.setEditable(false);
        txtNombreUsuarioTitulo.setText("Nombre_Usuario:");

        txtNombreUsuario.setToolTipText("");
        txtNombreUsuario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreUsuarioActionPerformed(evt);
            }
        });

        txtCorreoTitulo.setEditable(false);
        txtCorreoTitulo.setText("Correo:");

        txtCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCorreoActionPerformed(evt);
            }
        });

        txtContraseñaTitulo1.setEditable(false);
        txtContraseñaTitulo1.setText("Contraseña:");
        txtContraseñaTitulo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseñaTitulo1ActionPerformed(evt);
            }
        });

        btnEnviar.setText("Enviar");
        btnEnviar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnEnviar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });

        etiOpcionesAdicionales.setFont(new java.awt.Font("Sitka Text", 1, 12)); // NOI18N
        etiOpcionesAdicionales.setText("Opciones Adicionales -------------------------------------------------------------------------");

        txtEliminarUserTitulo.setEditable(false);
        txtEliminarUserTitulo.setText("Eliminar Usuario:");
        txtEliminarUserTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEliminarUserTituloActionPerformed(evt);
            }
        });

        txtEliminarUser.setForeground(new java.awt.Color(153, 153, 153));
        txtEliminarUser.setText("KEY: Nombre_Usuario");
        txtEliminarUser.setToolTipText("");
        txtEliminarUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtEliminarUserActionPerformed(evt);
            }
        });

        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnEliminar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        txtActualizarContraTitulo.setEditable(false);
        txtActualizarContraTitulo.setText("Actualizar contraseña");
        txtActualizarContraTitulo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtActualizarContraTituloActionPerformed(evt);
            }
        });

        txtIngreseCorreo.setForeground(new java.awt.Color(153, 153, 153));
        txtIngreseCorreo.setText("KEY: Correo");
        txtIngreseCorreo.setToolTipText("");
        txtIngreseCorreo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIngreseCorreoActionPerformed(evt);
            }
        });

        btnActualizar.setText("Actualizar");
        btnActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        btnActualizar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });

        btnMostrar.setText("Mostrar Usuarios:");
        btnMostrar.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        btnMostrar.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnMostrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMostrarActionPerformed(evt);
            }
        });

        listEstudiantes.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(listEstudiantes);

        txtNuevaContrasena.setForeground(new java.awt.Color(102, 102, 102));
        txtNuevaContrasena.setText("KEY: nueva contra");

        txtContrasenaActual.setText("Key: ingrese contra");

        txtContraseña.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtContraseñaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEdadTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNombreTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtApellidosTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(83, 83, 83))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(etiDatosDeCuenta, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 538, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(etiTitulo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(etiImagenUTP)))
                        .addGap(71, 71, 71))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtEliminarUserTitulo)
                                    .addComponent(btnMostrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtActualizarContraTitulo))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(txtEliminarUser, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(83, 83, 83)
                                                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(txtNuevaContrasena, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                                    .addComponent(txtContrasenaActual))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(btnActualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(txtIngreseCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(47, 47, 47)
                                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtNombreUsuarioTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(167, 167, 167)
                                .addComponent(txtCorreoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(etiDatosPersonales)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE)
                                    .addComponent(txtContraseña))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(37, 37, 37)
                                        .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(143, 143, 143)
                                        .addComponent(btnEnviar, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(txtContraseñaTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(90, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(etiOpcionesAdicionales)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(etiImagenUTP)
                    .addComponent(etiTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(etiDatosPersonales)
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidosTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtApellidos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEdadTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSexoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEdad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSexo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addComponent(etiDatosDeCuenta)
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreUsuarioTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCorreoTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(2, 2, 2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNombreUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(txtContraseñaTitulo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEnviar)
                    .addComponent(txtContraseña, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(etiOpcionesAdicionales)
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtEliminarUser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnEliminar)
                    .addComponent(txtEliminarUserTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtIngreseCorreo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtContrasenaActual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtNuevaContrasena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 76, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(btnActualizar)
                                .addGap(33, 33, 33))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtActualizarContraTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(29, 29, 29)))
                        .addComponent(btnMostrar, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
        );

        txtEliminarUser.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtEdadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEdadActionPerformed
        try {
            int edad = Integer.parseInt(txtEdad.getText());
            if (edad <= 0) {
                JOptionPane.showMessageDialog(this, "La edad debe ser mayor a 0");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Ingrese un número válido para la edad.");
        }
    }//GEN-LAST:event_txtEdadActionPerformed

    private void txtNombresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombresActionPerformed
        String nombres = txtNombres.getText();
        if (nombres.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo de nombres no puede estar vacío.");
        } else if (!nombres.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
            JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras.");
        }
     }//GEN-LAST:event_txtNombresActionPerformed

    private void txtApellidosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtApellidosActionPerformed
        String apellidos = txtApellidos.getText();
        if (apellidos.isEmpty()) {
            JOptionPane.showMessageDialog(this, "El campo de apellidos no puede estar vacío.");
        } else if (!apellidos.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
            JOptionPane.showMessageDialog(this, "El apellido solo puede contener letras.");
        }
    }//GEN-LAST:event_txtApellidosActionPerformed

    private void txtSexoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSexoActionPerformed
        String sexo = txtSexo.getText().toUpperCase();
        if (!(sexo.equals("M") || sexo.equals("F"))) {
            JOptionPane.showMessageDialog(this, "Ingrese un valor válido para el sexo (M/F).");
        }
    }//GEN-LAST:event_txtSexoActionPerformed

    private void txtNombreUsuarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreUsuarioActionPerformed
    String nombreUsuario = txtNombreUsuario.getText();
        if (nombreUsuario.length() < 4) {
            JOptionPane.showMessageDialog(this, "El nombre de usuario debe tener al menos 4 caracteres.");
        } else if (!nombreUsuario.matches("[a-zA-Z0-9_]+")) {
            JOptionPane.showMessageDialog(this, "El nombre de usuario solo puede contener letras, números y guiones bajos.");
        }
    }//GEN-LAST:event_txtNombreUsuarioActionPerformed

    private void txtCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCorreoActionPerformed
        String correo = txtCorreo.getText();
        if (!correo.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
            JOptionPane.showMessageDialog(this, "Ingrese un correo válido.");
        }
    }//GEN-LAST:event_txtCorreoActionPerformed

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed
            try {
            String nombres = txtNombres.getText().trim();
            String apellidos = txtApellidos.getText().trim();
            String edadTexto = txtEdad.getText().trim();
            String sexo = txtSexo.getText().trim().toUpperCase();
            String nombreUsuario = txtNombreUsuario.getText().trim();
            String correo = txtCorreo.getText().trim();
            String contrasena = txtContraseña.getText().trim();

            if (nombres.isEmpty() || apellidos.isEmpty() || edadTexto.isEmpty()
                    || sexo.isEmpty() || nombreUsuario.isEmpty() || correo.isEmpty() || contrasena.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Por favor, complete todos los campos.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!nombres.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
                JOptionPane.showMessageDialog(this, "El nombre solo puede contener letras.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!apellidos.matches("[a-zA-ZáéíóúÁÉÍÓÚñÑ ]+")) {
                JOptionPane.showMessageDialog(this, "El apellido solo puede contener letras.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            int edad;
            try {
                edad = Integer.parseInt(edadTexto);
                if (edad <= 0) {
                    JOptionPane.showMessageDialog(this, "La edad debe ser un número positivo.", "Error", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Ingrese un número válido para la edad.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!sexo.equals("M") && !sexo.equals("F")) {
                JOptionPane.showMessageDialog(this, "El sexo debe ser 'M' o 'F'.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (!correo.matches("^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$")) {
                JOptionPane.showMessageDialog(this, "Ingrese un correo válido.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (nombreUsuario.length() < 4) {
                JOptionPane.showMessageDialog(this, "El nombre de usuario debe tener al menos 4 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (!nombreUsuario.matches("[a-zA-Z0-9_]+")) {
                JOptionPane.showMessageDialog(this, "El nombre de usuario solo puede contener letras, números y guiones bajos.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            if (contrasena.length() < 8) {
                JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 8 caracteres.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            } else if (!contrasena.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).+$")) {
                JOptionPane.showMessageDialog(this, "La contraseña debe incluir mayúsculas, minúsculas, números y caracteres especiales.", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

            Estudiante estudiante = new Estudiante(nombres, apellidos, nombreUsuario, correo, contrasena, edad, sexo);
            listaEstudiantes.add(estudiante);
            insertarEstudiante(estudiante);

            JOptionPane.showMessageDialog(this, "Estudiante registrado con éxito.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
            actualizarJList();
            txtNombres.setText("");
            txtApellidos.setText("");
            txtEdad.setText("");
            txtSexo.setText("");
            txtNombreUsuario.setText("");
            txtCorreo.setText("");
            txtContraseña.setText("");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Ocurrió un error al registrar al estudiante: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }  
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void txtEliminarUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEliminarUserActionPerformed
        String nombreUsuario = txtEliminarUser.getText().trim();

        if (nombreUsuario.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, ingrese el nombre de usuario para eliminar.");
            return;
        }

        Estudiante estudianteEliminar = null;
        for (Estudiante estudiante : listaEstudiantes) {
            if (estudiante.getNombreUsuario().equals(nombreUsuario)) {
                estudianteEliminar = estudiante;
                break;
            }
        }

        if (estudianteEliminar == null) {
            JOptionPane.showMessageDialog(this, "Usuario no encontrado.");
            return;
        }

        listaEstudiantes.remove(estudianteEliminar);
        JOptionPane.showMessageDialog(this, "Usuario eliminado.");
        actualizarJList();
        txtEliminarUser.setText("");
    }//GEN-LAST:event_txtEliminarUserActionPerformed

    private void txtIngreseCorreoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIngreseCorreoActionPerformed
      String nuevoCorreo = txtCorreo.getText();
      String nuevaContraseña = txtIngreseCorreo.getText();
        if (nuevoCorreo.isEmpty() || nuevaContraseña.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Ingrese los datos para actualizar.");
        } else {
            JOptionPane.showMessageDialog(this, "Datos actualizados correctamente.");
        }
    }//GEN-LAST:event_txtIngreseCorreoActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        String nombreUsuario = txtEliminarUser.getText().trim();
    
    // Validar que el campo no esté vacío
    if (nombreUsuario.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Por favor, ingrese el nombre de usuario para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Buscar al estudiante en la lista por nombre de usuario
    Estudiante estudianteEliminar = null;
    for (Estudiante estudiante : listaEstudiantes) {
        if (estudiante.getNombreUsuario().equals(nombreUsuario)) {
            estudianteEliminar = estudiante;
            break;
        }
    }

    // Si no se encuentra el estudiante, mostrar un mensaje de error
    if (estudianteEliminar == null) {
        JOptionPane.showMessageDialog(this, "Estudiante no encontrado.", "Error", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Eliminar el estudiante de la lista
    listaEstudiantes.remove(estudianteEliminar);
    
    // Confirmar eliminación
    JOptionPane.showMessageDialog(this, "Estudiante eliminado con éxito.");

    // Limpiar el campo de texto
    txtEliminarUser.setText("");
    
    
    DefaultListModel<String> modeloLista = (DefaultListModel<String>) listEstudiantes.getModel();
    modeloLista.clear();

    // Actualizar el JList
    actualizarJList();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        String correo = txtIngreseCorreo.getText().trim();
        String contrasenaActual = txtContrasenaActual.getText().trim();
        String nuevaContrasena = txtNuevaContrasena.getText().trim();

        if (correo.isEmpty() || contrasenaActual.isEmpty() || nuevaContrasena.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Complete todos los campos.");
            return;
        }

        Estudiante estudianteActualizar = null;
        for (Estudiante estudiante : listaEstudiantes) {
            if (estudiante.getCorreo().equals(correo)) {
                estudianteActualizar = estudiante;
                break;
            }
        }

        if (estudianteActualizar == null || !estudianteActualizar.getContrasena().equals(contrasenaActual)) {
            JOptionPane.showMessageDialog(this, "Correo o contraseña actual incorrectos.");
            return;
        }

        estudianteActualizar.setContrasena(nuevaContrasena);
        JOptionPane.showMessageDialog(this, "Contraseña actualizada.");
        actualizarJList();
        txtIngreseCorreo.setText("");
        txtContrasenaActual.setText("");
        txtNuevaContrasena.setText("");
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnMostrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMostrarActionPerformed
        if (listaEstudiantes.isEmpty()) {
            JOptionPane.showMessageDialog(this, "No hay estudiantes registrados.");
            return;
        }
        actualizarJList();
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_proyecto().setVisible(true);
        });
    }//GEN-LAST:event_btnMostrarActionPerformed

    private void txtActualizarContraTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtActualizarContraTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtActualizarContraTituloActionPerformed

    private void txtContraseñaTitulo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseñaTitulo1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraseñaTitulo1ActionPerformed

    private void txtEliminarUserTituloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtEliminarUserTituloActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEliminarUserTituloActionPerformed

    private void txtContraseñaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtContraseñaActionPerformed
    String contraseña = txtContraseña.getText();
        if (contraseña.length() < 8) {
            JOptionPane.showMessageDialog(this, "La contraseña debe tener al menos 8 caracteres.");
        } else if (!contraseña.matches("^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@#$%^&+=!]).+$")) {
            JOptionPane.showMessageDialog(this, "La contraseña debe incluir mayúsculas, minúsculas, números y caracteres especiales.");
        }        // TODO add your handling code here:
    }//GEN-LAST:event_txtContraseñaActionPerformed

    /**
     * @param args the command line arguments
     */
 

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnEnviar;
    private javax.swing.JButton btnMostrar;
    private javax.swing.JLabel etiDatosDeCuenta;
    private javax.swing.JLabel etiDatosPersonales;
    private javax.swing.JLabel etiImagenUTP;
    private javax.swing.JLabel etiOpcionesAdicionales;
    private javax.swing.JLabel etiTitulo;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<String> listEstudiantes;
    private javax.swing.JTextField txtActualizarContraTitulo;
    private javax.swing.JTextField txtApellidos;
    private javax.swing.JTextField txtApellidosTitulo;
    private javax.swing.JTextField txtContrasenaActual;
    private javax.swing.JTextField txtContraseña;
    private javax.swing.JTextField txtContraseñaTitulo1;
    private javax.swing.JTextField txtCorreo;
    private javax.swing.JTextField txtCorreoTitulo;
    private javax.swing.JTextField txtEdad;
    private javax.swing.JTextField txtEdadTitulo;
    private javax.swing.JTextField txtEliminarUser;
    private javax.swing.JTextField txtEliminarUserTitulo;
    private javax.swing.JTextField txtIngreseCorreo;
    private javax.swing.JTextField txtNombreTitulo;
    private javax.swing.JTextField txtNombreUsuario;
    private javax.swing.JTextField txtNombreUsuarioTitulo;
    private javax.swing.JTextField txtNombres;
    private javax.swing.JTextField txtNuevaContrasena;
    private javax.swing.JTextField txtSexo;
    private javax.swing.JTextField txtSexoTitulo;
    // End of variables declaration//GEN-END:variables

    
}
